#!/usr/bin/env perl
# vim: ts=4 sw=4 noexpandtab filetype=perl
use Mojo::Base -strict;
use Mojo::Template;
use DBI;
use DBIx::Simple;

use DateTime;
use FindBin;
use YAML qw/LoadFile/;
use Email::Sender::Transport::SMTP::TLS;
use Try::Tiny;
use Email::MIME;
use Email::Sender::Simple qw/sendmail/;
use Getopt::Long;
use Pod::Usage;
use Date::Format;

my $self = main->init;

$self->send( [ 'sharabash@googlegroups.com', 'nour.sharabash@gmail.com', 'nour@sharabash.com', 'nour@quran.com', 'hend.zanaty@gmail.com', 'mohammed.alsakka@gmail.com', 'noura.sharabash@gmail.com', 'islam.sharabash@gmail.com', 'imansharabash@gmail.com', 'hani.sharabash@gmail.com', 'hanibash@gmail.com', 'hanadysharabash@gmail.com', 'fatema.elshoura@gmail.com' ] );

sub init {
	my $class = shift;
	my $self = {
		now  => DateTime->now,
		time => [ localtime( time ) ],
		dir  => $FindBin::Bin,
	};
	bless $self, $class;

	my %opts = (
		from => 'nour@quran.com'
	);

	GetOptions(\%opts, qw/
		from=s
	/) or pod2usage(1);

	pod2usage(1) if $opts{help};

	$self->{opts} = \%opts;
	$self->{conf} = LoadFile( "$self->{dir}/config.yml" );
	$self->{smtp} = new Email::Sender::Transport::SMTP::TLS (
		%{ $self->{conf}->{'Email::Sender::Transport::SMTP::TLS'} }
	);
	$self->{tmpl} = new Mojo::Template;
	$self->{dbh} = DBI->connect( 'dbi:Pg:dbname=sunnah', 'sunnah', 'sunnah', {
		pg_bool_tf => 0,
		pg_enable_utf8 => 1,
		AutoCommit => 1,
		RaiseError => 1,
		PrintError => 1,
	} );
	$self->{db} = new DBIx::Simple ( $self->{dbh} );

	return $self;
}

sub opts { shift->{opts} }
sub conf { shift->{conf} }
sub smtp { shift->{smtp} }
sub tmpl { shift->{tmpl} }
sub dbh { shift->{dbh} }
sub db { shift->{db} }

sub send {
	my ( $self, $email_to ) = @_;

	my $from = $self->opts->{from};
	my $to = $self->opts->{debug} ? $self->opts->{from} : shift @{ $email_to };
	my $cc = $self->opts->{debug} ? undef : join ', ', @{ $email_to };

	my @header =  ( From => "Nour Sharabash <$from>", To => $to );
	push @header, ( Cc => $cc ) if $cc;

	my @collection_id = $self->db->query( qq|
		select collection_id from collection order by random()
	| )->flat;

	my $count = scalar @collection_id;

	my $subject = "$count Random Daily Hadiths - ". strftime( "%A, %B %o", @{ $self->{time} } );

	push @header, ( Subject => $subject );

	my $email = Email::MIME->create( header_str => \@header );

	$email->content_type_set( 'text/html' );
	$email->charset_set( 'utf8' );

	my ( $stash, $query, @union );

	for my $collection_id ( @collection_id ) {
		push @union, qq|
            select * from (
            select h.hadith_id
                 , concat_ws(' - ', c.english, c.arabic) collection
                 , concat_ws(' - ', b.english, b.arabic) book
                 , h.text
                 , h.href
                 , h.reference
              from hadith h
              join collection c using (collection_id)
              left join book b using (book_id)
             where h.text is not null and h.collection_id = $collection_id
             order by random()
             limit 1
                 ) collection_$collection_id
		|;
	}

	$query = join " union ", @union;

	$stash->{result} = $self->db->query( $query )->hashes;

	my $output = $self->tmpl->render(<<'EOF', $stash);
% my ( $stash ) = @_;
<!DOCTYPE html>
<html>
	<head>
		<base href="http://sunnah.com/" target="_blank" />
	</head>
	<body dir="ltr">
<%
	for my $result ( @{ $stash->{result} } ) {
%>
		<div>
			<div style="width: 80%; margin: auto;">
				<h2>From <%= $result->{collection} %></h2>
				<% if ( $result->{book} ) { %><h3><%= $result->{book} %></h3><% } %>
				<%= $result->{text} %>

				<a href="<%= $result->{href} %>" style="height: 60px; margin-bottom: 40px; display: block;">
					<%= $result->{reference} %>
				</a>
			</div>
		</div>
<%
	}
%>
	</body>
</html>
EOF
	my %style = (
		english_hadith_full => "direction: ltr;",
		arabic_basic => "font-family: Trebuchet MS,Arial,Helvetica;",
		arabic_hadith_full => "direction: rtl; font-size: 26px; padding-left: 28px; text-align: justify;",
		hadith_narrated => "color: #29640C; font-size: 14px; font-weight: bold; padding-bottom: 8px; padding-left: 28px; text-decoration: none;",
		text_details => "color: #08081A; font-size: 13px; padding-bottom: 10px; padding-left: 28px; text-align: justify; text-decoration: none;",
		arabic_text_details => "direction: rtl; text-align: justify;",
		arabic_sanad => "color: gray; direction: rtl; text-align: justify;",
		hadith_reference => "border: 0 solid; float: left; font-family: Verdana,sans-serif; font-size: 10px; line-height: 15px; overflow: auto; padding: 15px 5px 10px 28px; text-align: left; text-decoration: none; width: 50%;",
		reference_type => "float: left; max-width: 40%; min-width: 28%;",
		reference_value => "display: inline; float: left; max-width: 60%;"
	);

	for my $class ( keys %style ) {
		$output =~ s/(class="[^"]*)$class([^"]*")/$1$style{$class}$2/g;
	}
	$output =~ s/class="/style="/g;

	$email->body_str_set( $output );

	try {
		sendmail $email, { transport => $self->smtp };
	} catch {}
}

1;
